package pnpiot.serializationperf;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;

import org.apache.avro.Schema;
import org.apache.avro.file.DataFileReader;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.GenericDatumReader;
import org.apache.avro.generic.GenericDatumWriter;
import org.apache.avro.generic.GenericRecord;
import org.apache.avro.io.BinaryDecoder;
import org.apache.avro.io.BinaryEncoder;
import org.apache.avro.io.DatumReader;
import org.apache.avro.io.DatumWriter;
import org.apache.avro.io.Decoder;
import org.apache.avro.io.DecoderFactory;
import org.apache.avro.io.EncoderFactory;

import com.google.protobuf.InvalidProtocolBufferException;

public class AppProtobuf {
	static String AvroSchemaStr = "{`type`: `record`,`name`: `Car.Location`,`fields`: [{`name`: `timeStamp`,`type`: `long`},{`name`: `fixType`,`type`: `int`},{`name`: `latitude`,`type`: `int`},{`name`: `longitude`,`type`: `int`},{`name`: `heading`,`type`: `int`},{`name`: `altitude`,`type`: `int`},{`name`: `speed`,`type`: `int`}]}";
	static int innerloop = 1000;
	static long loops = 1000;

	public static void main(String[] args) throws Exception {
		innerloop = 20;
		loops = 50;

		if (args.length > 0) {
			loops = Math.abs(Integer.parseInt(args[0]));
		}

		AvroSchemaStr = AvroSchemaStr.replace('`', '"');
		long startTime = System.currentTimeMillis();
		for (int i = 0; i < loops; i++) {
			LocationProtobuf.Location.Builder builder = null;
			ByteArrayOutputStream out = new ByteArrayOutputStream();
			for (int j = 0; j < innerloop; j++) {
				builder = createLocationBuilder(j);
				builder.setTimeStamp(new Date().getTime());
				builder.build().writeDelimitedTo(out);
			}
			out.flush();
			out.close();
			displaySerializedRecord(out);
		}

		long elapsedTime = System.currentTimeMillis() - startTime;
		Result.writeToFile("AppProtobuf", loops, elapsedTime);
	}

	private static LocationProtobuf.Location.Builder createLocationBuilder(int i) {
		LocationProtobuf.Location.Builder builder = LocationProtobuf.Location.newBuilder();
		builder.setTimeStamp(new Date().getTime());
		builder.setFixType(11100000 + i);
		builder.setLatitude(22200000 + i);
		builder.setLongitude(33300000 + i);
		builder.setHeading(44400000 + i);
		builder.setAltitude(55500000 + i);
		builder.setSpeed(66600000 + i);
		return builder;
	}

	private static void displaySerializedRecord(ByteArrayOutputStream out) throws Exception {
		int writeInterval = innerloop / 5; // write 5 records for each innerloop
		InputStream input = new ByteArrayInputStream(out.toByteArray());
		LocationProtobuf.Location.Builder builder = LocationProtobuf.Location.newBuilder();
		for (int j = 0; builder.mergeDelimitedFrom(input); j++) {
			if (j % writeInterval == 0) {
				System.out.print(new Date((long) builder.getTimeStamp()));
				System.out.print(", ");
				System.out.print(builder.getFixType());
				System.out.print(", ");
				System.out.print(builder.getLatitude());
				System.out.print(", ");
				System.out.print(builder.getLongitude());
				System.out.print(", ");
				System.out.print(builder.getHeading());
				System.out.print(", ");
				System.out.print(builder.getAltitude());
				System.out.print(", ");
				System.out.print(builder.getSpeed());
				System.out.println();
			}
		}
		System.out.println();
	}
}
